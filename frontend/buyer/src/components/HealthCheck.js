import { useMemo } from 'react';
import { useApi } from '../hooks/useApi';
import { apiService } from '../services/api';
import { BUYER_TEXTS } from '../utils/localization';

function HealthCheck() {
  // Create stable API function to prevent infinite loops
  const healthApiFunction = useMemo(() => () => apiService.healthCheck(), []);
  const { data, loading, error, refetch } = useApi(healthApiFunction, []);

  return (
    <div className="card">
      <h2>{BUYER_TEXTS.SYSTEM_STATUS}</h2>

      <div style={{ marginBottom: '1rem' }}>
        <button onClick={refetch} className="btn btn-primary" disabled={loading}>
          {loading ? BUYER_TEXTS.REFRESHING : BUYER_TEXTS.REFRESH_STATUS}
        </button>
      </div>

      {loading && <div className="loading">{BUYER_TEXTS.REFRESHING}</div>}

      {error && (
        <div className="error">
          <strong>{BUYER_TEXTS.SYSTEM_ERROR}:</strong> {error}
          <br />
          <small>–ë—ç–∫–µ–Ω–¥ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</small>
        </div>
      )}

      {data !== null && !error && (
        <div className="success">
          <strong>{BUYER_TEXTS.SYSTEM_HEALTHY}!</strong> –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ.
          <br />
          <small>–û—Ç–≤–µ—Ç –±—ç–∫–µ–Ω–¥–∞: {JSON.stringify(data)}</small>
        </div>
      )}

      <div style={{ marginTop: '2rem', padding: '1rem', backgroundColor: '#f7fafc', borderRadius: '0.375rem' }}>
        <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏</h3>
        <p><strong>URL API:</strong> {process.env.REACT_APP_API_URL || 'http://localhost:8000'}</p>
        <p><strong>–û–∫—Ä—É–∂–µ–Ω–∏–µ:</strong> {process.env.NODE_ENV}</p>
        <p><strong>–ü—Ä–æ–∫—Å–∏:</strong> {process.env.REACT_APP_API_URL ? '–û—Ç–∫–ª—é—á–µ–Ω' : '–í–∫–ª—é—á–µ–Ω (—á–µ—Ä–µ–∑ package.json)'}</p>

        <div style={{ marginTop: '1rem' }}>
          <h4>–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:</h4>
          <ul style={{ marginLeft: '1.5rem', marginTop: '0.5rem' }}>
            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É</li>
            <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±—ç–∫–µ–Ω–¥ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –∑–∞–ø—É—â–µ–Ω</li>
            <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</li>
            <li>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ –∏—Å—á–µ–∑–∞—é—Ç</li>
          </ul>
        </div>
      </div>

      <div style={{ marginTop: '1.5rem', padding: '1rem', backgroundColor: '#e6fffa', borderRadius: '0.375rem' }}>
        <h4>üå≤ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏</h4>
        <div className="grid grid-2">
          <div>
            <h5>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:</h5>
            <ul style={{ marginLeft: '1.5rem', marginTop: '0.5rem' }}>
              <li>–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤</li>
              <li>–ö–∞—Ç–∞–ª–æ–≥ –∏ –ø—Ä–æ—Ñ–∏–ª–∏ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤</li>
              <li>–ò–ò-–∞–Ω–∞–ª–∏–∑ –¥–æ—Å–æ–∫</li>
              <li>–°–∏—Å—Ç–µ–º–∞ —á–∞—Ç–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</li>
            </ul>
          </div>
          <div>
            <h5>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:</h5>
            <ul style={{ marginLeft: '1.5rem', marginTop: '0.5rem' }}>
              <li>Backend API: {error ? '‚ùå –ù–µ –≤ —Å–µ—Ç–∏' : '‚úÖ –í —Å–µ—Ç–∏'}</li>
              <li>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {error ? '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞' : '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∞'}</li>
              <li>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤: {error ? '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞' : '‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞'}</li>
              <li>–°–∏—Å—Ç–µ–º–∞ —á–∞—Ç–æ–≤: {error ? '‚ùå –ù–µ –≤ —Å–µ—Ç–∏' : '‚úÖ –ì–æ—Ç–æ–≤–∞'}</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}

export default HealthCheck;
