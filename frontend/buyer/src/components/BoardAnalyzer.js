import React, { useState } from 'react';
import { useApiMutation } from '../hooks/useApi';
import { apiService } from '../services/api';
import { BUYER_TEXTS } from '../utils/localization';
import ErrorMessage from './ui/ErrorMessage';

function BoardAnalyzer() {
  const [selectedFile, setSelectedFile] = useState(null);
  const [boardHeight, setBoardHeight] = useState('');
  const [boardLength, setBoardLength] = useState('');
  const [analysisResult, setAnalysisResult] = useState(null);
  const { mutate, loading, error, success } = useApiMutation();

  const handleFileSelect = (e) => {
    const file = e.target.files[0];
    if (file) {
      setSelectedFile(file);
      setAnalysisResult(null);
    }
  };

  const handleAnalyze = async () => {
    if (!selectedFile) return;

    try {
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä—ã –≤ –º–∏–ª–ª–∏–º–µ—Ç—Ä—ã –¥–ª—è API
      const heightInMm = (parseFloat(boardHeight) || 0.0) * 10;
      const lengthInMm = (parseFloat(boardLength) || 0.0) * 10;

      const result = await mutate(
        apiService.analyzeWoodenBoard,
        selectedFile,
        heightInMm,
        lengthInMm
      );
      setAnalysisResult(result);
    } catch (err) {
      console.error('Analysis failed:', err);
    }
  };

  const clearAnalysis = () => {
    setSelectedFile(null);
    setBoardHeight('');
    setBoardLength('');
    setAnalysisResult(null);
  };

  return (
    <div>
      <div className="card">
        <h2>üîç {BUYER_TEXTS.AI_POWERED_BOARD_ANALYZER}</h2>
        <p>{BUYER_TEXTS.BOARD_ANALYZER_DESCRIPTION}</p>

        <div className="form-group">
          <label className="form-label">{BUYER_TEXTS.SELECT_BOARD_IMAGE} *</label>
          <input
            type="file"
            accept="image/*"
            onChange={handleFileSelect}
            className="form-input"
          />
          {selectedFile && (
            <div style={{ marginTop: '0.5rem', fontSize: '0.875rem', color: '#718096' }}>
              {BUYER_TEXTS.SELECTED}: {selectedFile.name} ({(selectedFile.size / 1024 / 1024).toFixed(2)} MB)
            </div>
          )}
        </div>

        <div className="grid grid-2">
          <div className="form-group">
            <label className="form-label">{BUYER_TEXTS.HEIGHT} (—Å–º)</label>
            <input
              type="number"
              step="0.1"
              value={boardHeight}
              onChange={(e) => setBoardHeight(e.target.value)}
              placeholder={BUYER_TEXTS.HEIGHT_PLACEHOLDER}
              className="form-input"
            />
          </div>
          <div className="form-group">
            <label className="form-label">{BUYER_TEXTS.LENGTH} (—Å–º)</label>
            <input
              type="number"
              step="0.1"
              value={boardLength}
              onChange={(e) => setBoardLength(e.target.value)}
              placeholder={BUYER_TEXTS.LENGTH_PLACEHOLDER}
              className="form-input"
            />
          </div>
        </div>

        <div style={{ display: 'flex', gap: '1rem', marginTop: '1rem' }}>
          <button
            onClick={handleAnalyze}
            disabled={!selectedFile || loading}
            className="btn btn-primary"
          >
            {loading ? BUYER_TEXTS.ANALYZING : BUYER_TEXTS.ANALYZE_BOARD}
          </button>
          {selectedFile && (
            <button onClick={clearAnalysis} className="btn btn-secondary">
              {BUYER_TEXTS.CLEAR}
            </button>
          )}
        </div>

        <ErrorMessage error={error} />

        {success && analysisResult && (
          <div className="success" style={{ marginTop: '1rem' }}>
            {BUYER_TEXTS.ANALYSIS_COMPLETED}
          </div>
        )}
      </div>

      {/* Image Preview */}
      {selectedFile && (
        <div className="card">
          <h3>{BUYER_TEXTS.IMAGE_PREVIEW}</h3>
          <div style={{ textAlign: 'center' }}>
            <img
              src={URL.createObjectURL(selectedFile)}
              alt="Board preview"
              style={{
                maxWidth: '100%',
                maxHeight: '400px',
                borderRadius: '0.375rem',
                border: '1px solid #e2e8f0'
              }}
            />
          </div>
        </div>
      )}

      {/* Analysis Results */}
      {analysisResult && (
        <div className="card">
          <h3>üìä {BUYER_TEXTS.ANALYSIS_RESULTS}</h3>

          <div className="grid grid-2">
            <div className="stats-card" style={{ background: 'linear-gradient(135deg, #48bb78 0%, #38a169 100%)' }}>
              <div className="stats-number">
                {analysisResult.volume?.toFixed(2) || 'N/A'} {BUYER_TEXTS.CUBIC_METERS}
              </div>
              <div className="stats-label">{BUYER_TEXTS.ESTIMATED_VOLUME}</div>
            </div>

            <div className="stats-card" style={{ background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' }}>
              <div className="stats-number">
                {analysisResult.confidence ? `${(analysisResult.confidence * 100).toFixed(1)}%` : 'N/A'}
              </div>
              <div className="stats-label">{BUYER_TEXTS.CONFIDENCE_LEVEL}</div>
            </div>
          </div>

          <div style={{ marginTop: '1.5rem', padding: '1rem', backgroundColor: '#f7fafc', borderRadius: '0.375rem' }}>
            <h4>–î–µ—Ç–∞–ª–∏ –∞–Ω–∞–ª–∏–∑–∞</h4>
            <ul style={{ marginLeft: '1.5rem', marginTop: '0.5rem' }}>
              <li>–û—Ü–µ–Ω–∫–∞ –æ–±—ä–µ–º–∞: {analysisResult.volume?.toFixed(3) || 'N/A'} –∫—É–±–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç—Ä–æ–≤</li>
              <li>–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞: {analysisResult.confidence ? `${(analysisResult.confidence * 100).toFixed(1)}%` : 'N/A'}</li>
              <li>–°—Ç–∞—Ç—É—Å: {analysisResult.success ? '–£—Å–ø–µ—à–Ω–æ' : '–ù–µ—É–¥–∞—á–Ω–æ'}</li>
              {analysisResult.message && <li>–°–æ–æ–±—â–µ–Ω–∏–µ: {analysisResult.message}</li>}
            </ul>
          </div>

          {analysisResult.volume && (
            <div style={{ marginTop: '1.5rem', padding: '1rem', backgroundColor: '#e6fffa', borderRadius: '0.375rem' }}>
              <h4>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h4>
              <ul style={{ marginLeft: '1.5rem', marginTop: '0.5rem' }}>
                <li>–û—Ü–µ–Ω–æ—á–Ω–∞—è —Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {(analysisResult.volume * 150).toFixed(2)} ‚ÇΩ - {(analysisResult.volume * 250).toFixed(2)} ‚ÇΩ</li>
                <li>–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ –Ω–∞ –Ω–∞—à–µ–π —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ</li>
                <li>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è —Ü–µ–Ω</li>
                <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –æ—Ü–µ–Ω–∫—É –æ–±—ä–µ–º–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∞—Ö —Å –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏</li>
              </ul>
            </div>
          )}
        </div>
      )}

      {/* How It Works */}
      <div className="card">
        <h3>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –¥–æ—Å–æ–∫</h3>
        <div className="grid grid-2">
          <div>
            <h4>ü§ñ –ò–ò —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è</h4>
            <ul style={{ marginLeft: '1.5rem', marginTop: '0.5rem' }}>
              <li>–ü–µ—Ä–µ–¥–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è</li>
              <li>–ú–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è, –æ–±—É—á–µ–Ω–Ω—ã–µ –Ω–∞ –¥–∞–Ω–Ω—ã—Ö –¥—Ä–µ–≤–µ—Å–∏–Ω—ã</li>
              <li>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</li>
              <li>–¢–æ—á–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –æ–±—ä–µ–º–∞</li>
            </ul>
          </div>

          <div>
            <h4>üìè –ß—Ç–æ –º—ã –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º</h4>
            <ul style={{ marginLeft: '1.5rem', marginTop: '0.5rem' }}>
              <li>–†–∞–∑–º–µ—Ä—ã –∏ –≥–µ–æ–º–µ—Ç—Ä–∏—è –¥–æ—Å–∫–∏</li>
              <li>–£–∑–æ—Ä—ã –≤–æ–ª–æ–∫–æ–Ω –¥—Ä–µ–≤–µ—Å–∏–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–æ</li>
              <li>–î–µ—Ñ–µ–∫—Ç—ã –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∏ –Ω–µ—Ä–æ–≤–Ω–æ—Å—Ç–∏</li>
              <li>–û—Ü–µ–Ω–∫–∞ –æ–±—ä–µ–º–∞ —Å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏</li>
            </ul>
          </div>
        </div>

        <div style={{ marginTop: '1.5rem', padding: '1rem', backgroundColor: '#fff5cd', borderRadius: '0.375rem' }}>
          <h4>‚ö†Ô∏è {BUYER_TEXTS.IMPORTANT_NOTES}</h4>
          <ul style={{ marginLeft: '1.5rem', marginTop: '0.5rem' }}>
            <li>{BUYER_TEXTS.RESULTS_ARE_ESTIMATES}</li>
            <li>{BUYER_TEXTS.ENSURE_GOOD_LIGHTING}</li>
            <li>{BUYER_TEXTS.INCLUDE_REFERENCE_OBJECTS}</li>
            <li>{BUYER_TEXTS.ESTIMATION_PURPOSES_ONLY}</li>
          </ul>
        </div>
      </div>
    </div>
  );
}

export default BoardAnalyzer;
