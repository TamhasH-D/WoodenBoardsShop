#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–µ—Ä–∞—Ä—Ö–∏–∏ –ø–∞–ø–æ–∫.
"""

import tempfile
from pathlib import Path
from uuid import uuid4


def test_image_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    with tempfile.TemporaryDirectory() as temp_dir:
        print(f"üìÅ –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {temp_dir}")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ UUID
        seller_id = uuid4()
        product_id = uuid4()
        image_id = uuid4()

        print(f"üë§ Seller ID: {seller_id}")
        print(f"üì¶ Product ID: {product_id}")
        print(f"üñºÔ∏è  Image ID: {image_id}")

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        image_content = b"fake image content for testing"
        
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
            print("üíæ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫...")

            # –°–æ–∑–¥–∞–µ–º –æ–∂–∏–¥–∞–µ–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
            base_upload_dir = Path(temp_dir)
            seller_dir = base_upload_dir / "sellers" / str(seller_id)
            product_dir = seller_dir / "products" / str(product_id)
            product_dir.mkdir(parents=True, exist_ok=True)

            # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            filename = f"{image_id}.jpg"
            file_path = product_dir / filename

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            with open(file_path, 'wb') as f:
                f.write(image_content)

            print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_path}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
            expected_path = Path(temp_dir) / "sellers" / str(seller_id) / "products" / str(product_id) / f"{image_id}.jpg"
            print(f"üìç –û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å: {expected_path}")

            if file_path == expected_path:
                print("‚úÖ –ü—É—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ!")
            else:
                print(f"‚ùå –ü—É—Ç—å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç! –ü–æ–ª—É—á–µ–Ω: {file_path}")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if expected_path.exists():
                print("‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            else:
                print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                return False

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
            with open(expected_path, 'rb') as f:
                saved_content = f.read()

            if saved_content == image_content:
                print("‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            else:
                print("‚ùå –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç!")
                return False

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
            print("üóëÔ∏è  –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞...")
            expected_path.unlink()

            if not expected_path.exists():
                print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞!")
                return False

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–∏—Å—Ç–∫—É –ø—É—Å—Ç—ã—Ö –ø–∞–ø–æ–∫
            print("üßπ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–∏—Å—Ç–∫—É –ø—É—Å—Ç—ã—Ö –ø–∞–ø–æ–∫...")

            # –£–¥–∞–ª—è–µ–º –ø—É—Å—Ç—ã–µ –ø–∞–ø–∫–∏
            try:
                product_dir.rmdir()  # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É –ø—Ä–æ–¥—É–∫—Ç–∞
                products_dir = product_dir.parent
                if not any(products_dir.iterdir()):
                    products_dir.rmdir()  # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É products
                    seller_dir = products_dir.parent
                    if not any(seller_dir.iterdir()):
                        seller_dir.rmdir()  # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É –ø—Ä–æ–¥–∞–≤—Ü–∞
                print("‚úÖ –ü—É—Å—Ç—ã–µ –ø–∞–ø–∫–∏ –æ—á–∏—â–µ–Ω—ã!")
            except OSError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–ø–æ–∫: {e}")
                return False
            
            print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return False


def test_get_seller_product_dir():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ get_seller_product_dir...")

    with tempfile.TemporaryDirectory() as temp_dir:
        base_upload_dir = Path(temp_dir)
        seller_id = uuid4()
        product_id = uuid4()

        expected_dir = base_upload_dir / "sellers" / str(seller_id) / "products" / str(product_id)

        print(f"üìÅ –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {base_upload_dir}")
        print(f"üë§ Seller ID: {seller_id}")
        print(f"üì¶ Product ID: {product_id}")
        print(f"üìç –û–∂–∏–¥–∞–µ–º–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {expected_dir}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø—É—Ç–∏
        actual_dir = base_upload_dir / "sellers" / str(seller_id) / "products" / str(product_id)

        if expected_dir == actual_dir:
            print("‚úÖ –õ–æ–≥–∏–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø—É—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø—É—Ç–∏!")
            print(f"   –û–∂–∏–¥–∞–ª–æ—Å—å: {expected_dir}")
            print(f"   –ü–æ–ª—É—á–µ–Ω–æ: {actual_dir}")
            return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n")

    test1_result = test_image_structure()
    test2_result = test_get_seller_product_dir()

    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   –¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤: {'‚úÖ –ü–†–û–ô–î–ï–ù' if test1_result else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    print(f"   –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {'‚úÖ –ü–†–û–ô–î–ï–ù' if test2_result else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")

    if test1_result and test2_result:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã! –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        return 0
    else:
        print("\nüí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.")
        return 1


if __name__ == "__main__":
    exit_code = main()
    exit(exit_code)
