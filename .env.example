# Diplom Project Environment Variables Template
# Copy this file to .env and customize the values for your environment
# Portable configuration that works across all systems and environments

### Backend API Settings ###
# Main backend service configuration - portable across all environments
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8000
BACKEND_DEBUG=true
BACKEND_LOG_LEVEL=info
BACKEND_RELOAD=true
BACKEND_WORKERS=1

### File Upload Settings ###
# Directory for uploaded files (relative to container working directory)
BACKEND_UPLOADS_DIR=uploads

### Database Configuration ###
# PostgreSQL database settings - uses Docker service names for portability
# Change these values for production deployments
BACKEND_PG_HOST=backend-pg
BACKEND_PG_PORT=5432
BACKEND_PG_USER=your_db_user
BACKEND_PG_PASSWORD=your_secure_password
BACKEND_PG_DATABASE=your_database_name

### Redis Configuration ###
# Redis cache and session storage - uses Docker service names for portability
BACKEND_REDIS_HOST=backend-redis
BACKEND_REDIS_PORT=6379
BACKEND_REDIS_PASSWORD=your_redis_password
BACKEND_REDIS_MAX_CONNECTIONS=50

### AI/ML Services Configuration ###
# Prosto Board Volume Detection Service
PROSTO_BOARD_PORT=8001
DETECT_PORT=8002
PATH_TO_YOLO_SEGMENT_MODEL=models/wood.pt
CONFIDENCE_THRESHOLD=0.5

### Frontend Configuration ###
# Global frontend environment settings - portable across all systems
NODE_ENV=production
REACT_APP_API_URL=http://localhost:8000
REACT_APP_WOODEN_BOARDS_API_URL=http://localhost:8001

### Frontend Services Ports ###
# Individual frontend service port assignments - consistent across environments
FRONTEND_ADMIN_PORT=8080
FRONTEND_SELLER_PORT=8081
FRONTEND_BUYER_PORT=8082

### Frontend Service Configuration ###
# Admin Frontend Settings - uses localhost for host system access
FRONTEND_ADMIN_API_URL=http://localhost:8000
FRONTEND_ADMIN_API_TIMEOUT=30000
FRONTEND_ADMIN_ENABLE_ANALYTICS=false
FRONTEND_ADMIN_ENABLE_DEBUG_TOOLS=false

# Seller Frontend Settings - uses localhost for host system access
FRONTEND_SELLER_API_URL=http://localhost:8000
FRONTEND_SELLER_WOODEN_BOARDS_API_URL=http://localhost:8001
FRONTEND_SELLER_API_TIMEOUT=30000
FRONTEND_SELLER_ENABLE_ANALYTICS=false
FRONTEND_SELLER_ENABLE_DEBUG_TOOLS=false

# Buyer Frontend Settings - uses localhost for host system access
FRONTEND_BUYER_API_URL=http://localhost:8000
FRONTEND_BUYER_API_TIMEOUT=30000
FRONTEND_BUYER_ENABLE_ANALYTICS=false
FRONTEND_BUYER_ENABLE_DEBUG_TOOLS=false

### CORS Configuration ###
# Cross-Origin Resource Sharing settings - portable across all environments
# Allows frontend applications to communicate with backend from any host
BACKEND_CORS_ALLOW_ORIGINS=*
BACKEND_CORS_ALLOW_CREDENTIALS=true
BACKEND_CORS_ALLOW_METHODS=*
BACKEND_CORS_ALLOW_HEADERS=*

### Service Communication URLs ###
# Internal Docker network communication - uses service names for portability
# YOLO backend URL for wooden boards volume analysis (Docker service name)
BACKEND_PROSTO_BOARD_VOLUME_SEG_URL=http://yolo_backend:8001
YOLO_SERVICE_SEGMENT_URL=http://detect:8002/detect_seg/
CORS_URL=*

### Keycloak Configuration ###
# Keycloak Identity and Access Management - change passwords for production
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=your_secure_keycloak_password
KEYCLOAK_PORT=8030

### Keycloak Realm, Client, and User Setup Configuration (for setup script) ###
# These variables are used by the Keycloak setup script (setup-universal.sh)
# to configure realms, clients, and test users automatically.
# Ensure these defaults align with frontend expectations if necessary.

# Realm Names
KEYCLOAK_REALM_ADMIN_NAME=AdminRealm
KEYCLOAK_REALM_BUYER_NAME=BuyerRealm
KEYCLOAK_REALM_SELLER_NAME=SellerRealm

# Admin Client Configuration
KEYCLOAK_CLIENT_ADMIN_ID=admin-frontend
KEYCLOAK_CLIENT_ADMIN_REDIRECT_URIS=http://localhost:8080/*,https://admin.taruman.ru/* # Comma-separated
KEYCLOAK_CLIENT_ADMIN_WEB_ORIGINS=+ # Comma-separated, '+' allows all valid origins, '*' is also an option

# Buyer Client Configuration
KEYCLOAK_CLIENT_BUYER_ID=buyer-frontend
KEYCLOAK_CLIENT_BUYER_REDIRECT_URIS=http://localhost:8082/*,https://buyer.taruman.ru/* # Comma-separated
KEYCLOAK_CLIENT_BUYER_WEB_ORIGINS=+ # Comma-separated

# Seller Client Configuration
KEYCLOAK_CLIENT_SELLER_ID=seller-frontend
KEYCLOAK_CLIENT_SELLER_REDIRECT_URIS=http://localhost:8081/*,https://seller.taruman.ru/* # Comma-separated
KEYCLOAK_CLIENT_SELLER_WEB_ORIGINS=+ # Comma-separated

# Admin Test User
KEYCLOAK_USER_ADMIN_USERNAME=admin@test.com
KEYCLOAK_USER_ADMIN_EMAIL=admin@test.com
KEYCLOAK_USER_ADMIN_PASSWORD=admin123

# Buyer Test User
KEYCLOAK_USER_BUYER_USERNAME=buyer@test.com
KEYCLOAK_USER_BUYER_EMAIL=buyer@test.com
KEYCLOAK_USER_BUYER_PASSWORD=buyer123

# Seller Test User
KEYCLOAK_USER_SELLER_USERNAME=seller@test.com
KEYCLOAK_USER_SELLER_EMAIL=seller@test.com
KEYCLOAK_USER_SELLER_PASSWORD=seller123

# Universal Frontend Configuration
# Works for both development and production environments

# Environment detection
NODE_ENV=development

# Production domain configuration (example)
PRODUCTION_ADMIN_HOST=admin.your-domain.com
PRODUCTION_SELLER_HOST=seller.your-domain.com
PRODUCTION_BUYER_HOST=buyer.your-domain.com
PRODUCTION_API_HOST=api.your-domain.com
PRODUCTION_KEYCLOAK_HOST=keycloak.your-domain.com

# Ports configuration
FRONTEND_BUYER_PORT=8082
FRONTEND_SELLER_PORT=8081
FRONTEND_ADMIN_PORT=8080
FRONTEND_DEV_PORT=3000

# Keycloak configuration
KEYCLOAK_HOST=your-keycloak-host
KEYCLOAK_PORT=8030

# Keycloak server configuration
KC_HOSTNAME=keycloak.your-domain.com
KC_HOSTNAME_STRICT=false
KC_HTTP_ENABLED=true
KC_PROXY=edge
KC_DB=postgres
KC_DB_URL=jdbc:postgresql://keycloak-postgres:5432/keycloak

# Production ports configuration
ADMIN_FRONTEND_PORT=8080
SELLER_FRONTEND_PORT=8081
BUYER_FRONTEND_PORT=8082
API_PORT=8000
KEYCLOAK_EXTERNAL_PORT=8030

# Container names
ADMIN_FRONTEND_CONTAINER=admin-frontend-prod
SELLER_FRONTEND_CONTAINER=seller-frontend-prod
BUYER_FRONTEND_CONTAINER=buyer-frontend-prod
KEYCLOAK_CONTAINER=keycloak-prod
KEYCLOAK_POSTGRES_CONTAINER=keycloak-postgres-prod
KEYCLOAK_SETUP_CONTAINER=keycloak-setup-prod

# Frontend environment ports for production
FRONTEND_PRODUCTION_PORT=443

# Keycloak SMTP Configuration (for email sending)
KC_SMTP_SERVER_HOST=smtp.gmail.com
KC_SMTP_SERVER_PORT=587
KC_SMTP_FROM=your-email@gmail.com
KC_SMTP_AUTH=true
KC_SMTP_USER=your-email@gmail.com
KC_SMTP_PASSWORD=your-app-password
KC_SMTP_STARTTLS=true
KC_SMTP_SSL=false

# Keycloak Hostname Configuration
KC_HOSTNAME_URL=https://keycloak.your-domain.com
KC_HOSTNAME_STRICT_HTTPS=false

# Keycloak URLs for frontend integration
KEYCLOAK_URL=http://localhost:8030
KEYCLOAK_REALM_ADMIN=AdminRealm
KEYCLOAK_REALM_BUYER=BuyerRealm
KEYCLOAK_REALM_SELLER=SellerRealm

# Keycloak Client IDs
KEYCLOAK_CLIENT_ADMIN=admin-frontend
KEYCLOAK_CLIENT_BUYER=buyer-frontend
KEYCLOAK_CLIENT_SELLER=seller-frontend

### PostgreSQL Configuration ###
# PostgreSQL database for Keycloak - change passwords for production
POSTGRES_DB=keycloak
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_postgres_password
POSTGRES_PORT=5432

### Keycloak Database Configuration ###
# Keycloak database connection settings
KC_DB=postgres
KC_DB_URL=jdbc:postgresql://keycloak-postgres:5432/keycloak
KC_DB_USERNAME=postgres
KC_DB_PASSWORD=your_secure_postgres_password

### Medama Analytics Configuration ###
# Medama analytics dashboard - portable across all environments
# Access dashboard at: http://localhost:8070
# Note: Authentication is handled through Medama's web interface
MEDAMA_PORT=8070
