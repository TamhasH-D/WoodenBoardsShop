#!/usr/bin/env python3
"""–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Selenium Grid."""

import requests
from selenium import webdriver
from selenium.webdriver.chrome.options import Options

def main():
    print('üöÄ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Selenium Grid')
    print('=' * 50)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Grid
    try:
        response = requests.get('http://selenium-hub:4444/status', timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f'‚úÖ Grid –≥–æ—Ç–æ–≤: {data["value"]["ready"]}')
            nodes = data['value']['nodes']
            print(f'üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤: {len(nodes)}')
            for i, node in enumerate(nodes):
                print(f'  üìç –£–∑–µ–ª {i+1}: {node["availability"]} ({len(node["slots"])} —Å–ª–æ—Ç–æ–≤)')
        else:
            print(f'‚ùå Grid –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: HTTP {response.status_code}')
            return False
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}')
        return False

    # –¢–µ—Å—Ç –±—Ä–∞—É–∑–µ—Ä–∞
    print('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...')
    chrome_options = Options()
    chrome_options.add_argument('--headless')
    chrome_options.add_argument('--no-sandbox')
    chrome_options.add_argument('--disable-dev-shm-usage')
    chrome_options.add_argument('--disable-gpu')
    chrome_options.add_argument('--window-size=1920,1080')

    driver = None
    try:
        print('üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Selenium Hub...')
        driver = webdriver.Remote(
            command_executor='http://selenium-hub:4444/wd/hub',
            options=chrome_options
        )
        
        print(f'‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ Selenium Grid!')
        print(f'üìã –°–µ—Å—Å–∏—è ID: {driver.session_id}')
        print(f'üåê Capabilities: {driver.capabilities["browserName"]} {driver.capabilities["browserVersion"]}')
        
        # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        print('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...')
        driver.get('data:text/html,<html><head><title>Test Page</title></head><body><h1>Hello Selenium!</h1></body></html>')
        print(f'üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {driver.title}')
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        window_size = driver.get_window_size()
        print(f'üñ•Ô∏è –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞: {window_size["width"]}x{window_size["height"]}')
        
        # –¢–µ—Å—Ç JavaScript
        result = driver.execute_script("return 'JavaScript —Ä–∞–±–æ—Ç–∞–µ—Ç!';")
        print(f'üîß JavaScript —Ç–µ—Å—Ç: {result}')
        
        print('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!')
        return True
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Selenium: {e}')
        return False
        
    finally:
        if driver:
            print('üîö –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...')
            driver.quit()

if __name__ == "__main__":
    success = main()
    if success:
        print('\nüéâ Selenium Grid –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç!')
        exit(0)
    else:
        print('\nüí• –ü—Ä–æ–±–ª–µ–º—ã —Å Selenium Grid')
        exit(1)
