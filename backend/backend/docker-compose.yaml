services:
  # Database migration init container
  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    image: backend-migrate:latest
    container_name: backend-migrate
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      BACKEND_PG_HOST: backend-pg
      BACKEND_PG_PORT: 5432
      BACKEND_PG_USER: ${BACKEND_PG_USER:-backend}
      BACKEND_PG_PASSWORD: ${BACKEND_PG_PASSWORD:-backend}
      BACKEND_PG_DATABASE: ${BACKEND_PG_DATABASE:-backend}
    networks:
      - backend-network
    restart: "no"  # Run once and exit

  api:
    &api
    build:
      context: .
    image: backend:latest
    container_name: backend-api
    restart: always
    ports:
      - "${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      BACKEND_CORS_ALLOW_ORIGINS: ${BACKEND_CORS_ALLOW_ORIGINS:-"*"}
      BACKEND_CORS_ALLOW_CREDENTIALS: ${BACKEND_CORS_ALLOW_CREDENTIALS:-True}
      BACKEND_CORS_ALLOW_METHODS: ${BACKEND_CORS_ALLOW_METHODS:-"*"}
      BACKEND_CORS_ALLOW_HEADERS: ${BACKEND_CORS_ALLOW_HEADERS:-"*"}
      POSTGRES_PASSWORD: ${BACKEND_PG_PASSWORD:-backend}
      POSTGRES_USER: ${BACKEND_PG_USER:-backend}
      POSTGRES_DB: ${BACKEND_PG_DATABASE:-backend}
    volumes:
      - ./migrations:/app/migrations
    networks:
      - backend-network

  postgres:
    image: postgres:17.4-bookworm
    hostname: backend-pg
    container_name: backend-pg
    environment:
      POSTGRES_PASSWORD: ${BACKEND_PG_PASSWORD:-backend}
      POSTGRES_USER: ${BACKEND_PG_USER:-backend}
      POSTGRES_DB: ${BACKEND_PG_DATABASE:-backend}
    volumes:
      - backend-pg-data:/var/lib/postgresql/data
    restart: always
    networks:
      - backend-network
    healthcheck:
      test: pg_isready -U ${BACKEND_PG_USER:-backend}
      interval: 2s
      timeout: 3s
      retries: 40

  redis:
    image: bitnami/redis:7.4
    container_name: backend-redis
    ports:
      - "6379:6379"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: ${BACKEND_REDIS_PASSWORD:+"no"}${BACKEND_REDIS_PASSWORD:-"yes"}
      REDIS_PASSWORD: ${BACKEND_REDIS_PASSWORD:-""}
    networks:
      - backend-network
    healthcheck:
      test: redis-cli ping
      interval: 2s
      timeout: 3s
      retries: 40
    volumes:
      - backend-redis-data:/bitnami/redis/data

volumes:
  backend-pg-data:
  backend-redis-data:

networks:
  backend-network:
    driver: bridge
