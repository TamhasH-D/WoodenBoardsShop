version: '3.8'

services:

  # Keycloak
  keycloak:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    container_name: keycloak-prod
    ports:
      - "8030:8080"
    environment:
      - NODE_ENV=production
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-postgres:5432/keycloak
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KC_HOSTNAME=keycloak.taruman.ru
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
      - KC_PROXY=edge
      - PRODUCTION_ADMIN_HOST=${PRODUCTION_ADMIN_HOST}
      - PRODUCTION_SELLER_HOST=${PRODUCTION_SELLER_HOST}
      - PRODUCTION_BUYER_HOST=${PRODUCTION_BUYER_HOST}
      - PRODUCTION_API_HOST=${PRODUCTION_API_HOST}
      - PRODUCTION_KEYCLOAK_HOST=${PRODUCTION_KEYCLOAK_HOST}
    depends_on:
      - keycloak-postgres
    networks:
      - diplom_default
    restart: unless-stopped

  # Keycloak PostgreSQL
  keycloak-postgres:
    image: postgres:15-alpine
    container_name: keycloak-postgres-prod
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - diplom_default
    restart: unless-stopped

  # Keycloak Setup
  keycloak-setup:
    build:
      context: ./keycloak
      dockerfile: Dockerfile.setup
    container_name: keycloak-setup-prod
    environment:
      - NODE_ENV=production
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      - keycloak
    networks:
      - diplom_default
    restart: "no"





  # Seller Frontend
  seller-frontend:
    build:
      context: ./frontend/seller
      dockerfile: Dockerfile.dev
    container_name: seller-frontend-prod
    ports:
      - "8081:3000"
    environment:
      - NODE_ENV=production
      - PRODUCTION_SELLER_HOST=${PRODUCTION_SELLER_HOST}
      - PRODUCTION_API_HOST=${PRODUCTION_API_HOST}
      - PRODUCTION_KEYCLOAK_HOST=${PRODUCTION_KEYCLOAK_HOST}
      - LOCALHOST_HOST=${LOCALHOST_HOST}
      - DOCKER_HOST=${DOCKER_HOST}
      - PRODUCTION_HOST=${PRODUCTION_HOST}
      - KEYCLOAK_HOST=${PRODUCTION_KEYCLOAK_HOST}
      - KEYCLOAK_PORT=443
      - FRONTEND_PORT=443
    networks:
      - diplom_default
    restart: unless-stopped

  # Buyer Frontend
  buyer-frontend:
    build:
      context: ./frontend/buyer
      dockerfile: Dockerfile.dev
    container_name: buyer-frontend-prod
    ports:
      - "8082:3000"
    environment:
      - NODE_ENV=production
      - PRODUCTION_BUYER_HOST=${PRODUCTION_BUYER_HOST}
      - PRODUCTION_API_HOST=${PRODUCTION_API_HOST}
      - PRODUCTION_KEYCLOAK_HOST=${PRODUCTION_KEYCLOAK_HOST}
      - LOCALHOST_HOST=${LOCALHOST_HOST}
      - DOCKER_HOST=${DOCKER_HOST}
      - PRODUCTION_HOST=${PRODUCTION_HOST}
      - KEYCLOAK_HOST=${PRODUCTION_KEYCLOAK_HOST}
      - KEYCLOAK_PORT=443
      - FRONTEND_PORT=443
    networks:
      - diplom_default
    restart: unless-stopped

volumes:
  keycloak_postgres_data:

networks:
  diplom_default:
    name: diplom_default
    external: true
