#!/bin/bash

set -e

echo "üîÑ –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."

# –ó–∞–ø—É—Å–∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–ø–ª–µ—è –¥–ª—è Selenium (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
if [ "$TEST_TYPE" != "api" ]; then
    echo "üñ•Ô∏è –ó–∞–ø—É—Å–∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–ø–ª–µ—è –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
    Xvfb :99 -screen 0 1920x1080x24 &
    export DISPLAY=:99
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
if [ "$TEST_TYPE" = "api" ]; then
    echo "üîß API —Ç–µ—Å—Ç—ã - –æ–∂–∏–¥–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ backend..."
    TEST_TYPE=api INCLUDE_FRONTENDS=false python utils/wait_for_services.py
else
    echo "üåê –ü–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã - –æ–∂–∏–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    python utils/wait_for_services.py
fi

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ "$TEST_TYPE" = "api" ]; then
    echo "üß™ –ó–∞–ø—É—Å–∫ API —Ç–µ—Å—Ç–æ–≤..."
    pytest api_tests/ -v \
        --html=reports/api_tests_report.html --self-contained-html \
        --junitxml=reports/api_tests_report.xml \
        -p utils.pytest_logger_plugin
elif [ "$TEST_TYPE" = "browser" ]; then
    echo "üåê –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
    pytest browser_tests/ -v \
        --html=reports/browser_tests_report.html --self-contained-html \
        --junitxml=reports/browser_tests_report.xml \
        -p utils.pytest_logger_plugin
elif [ "$TEST_TYPE" = "integration" ]; then
    echo "üîó –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
    pytest integration_tests/ -v \
        --html=reports/integration_tests_report.html --self-contained-html \
        --junitxml=reports/integration_tests_report.xml \
        -p utils.pytest_logger_plugin
else
    echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤..."
    pytest -v \
        --html=reports/all_tests_report.html --self-contained-html \
        --junitxml=reports/all_tests_report.xml \
        --cov=. --cov-report=html:reports/coverage --cov-report=xml:reports/coverage.xml \
        -p utils.pytest_logger_plugin
fi

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ª–æ–≥–∞—Ö
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ–≥–∞—Ö:"
if [ -d "/app/logs" ] && [ "$(ls -A /app/logs)" ]; then
    echo "–°–æ–∑–¥–∞–Ω–Ω—ã–µ –ª–æ–≥ —Ñ–∞–π–ª—ã:"
    ls -la /app/logs/

    # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥
    LATEST_LOG=$(ls -t /app/logs/test_results_*.log 2>/dev/null | head -1)
    if [ -n "$LATEST_LOG" ]; then
        echo ""
        echo "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞ ($LATEST_LOG):"
        tail -20 "$LATEST_LOG"
    fi
else
    echo "–õ–æ–≥ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

echo "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
