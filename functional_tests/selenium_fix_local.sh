#!/bin/bash

# –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º Selenium
# –†–∞–±–æ—Ç–∞–µ—Ç –∏–∑–≤–Ω–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
COMPOSE_FILE="docker-compose.test.yaml"
PROJECT_NAME="diplom-functional-tests"
SELENIUM_HUB_URL="http://localhost:4444"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
run_command() {
    local cmd="$1"
    log "üîß –í—ã–ø–æ–ª–Ω—è–µ–º: $cmd"
    
    if eval "$cmd"; then
        success "–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        error "–ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π"
        return 1
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Selenium —Å–µ—Ä–≤–∏—Å–æ–≤
stop_selenium_services() {
    log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Selenium —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    run_command "docker-compose -f $COMPOSE_FILE -p $PROJECT_NAME stop selenium-chrome" || true
    run_command "docker-compose -f $COMPOSE_FILE -p $PROJECT_NAME stop selenium-hub" || true
    
    success "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
remove_selenium_containers() {
    log "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ Selenium –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    run_command "docker rm -f selenium-chrome" || true
    run_command "docker rm -f selenium-hub" || true
    
    success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤
pull_selenium_images() {
    log "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Selenium –æ–±—Ä–∞–∑–æ–≤..."
    
    run_command "docker pull selenium/hub:4.25.0"
    run_command "docker pull selenium/node-chrome:4.25.0"
    
    success "–û–±—Ä–∞–∑—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
start_selenium_services() {
    log "üöÄ –ó–∞–ø—É—Å–∫ Selenium —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ó–∞–ø—É—Å–∫ Hub
    run_command "docker-compose -f $COMPOSE_FILE -p $PROJECT_NAME up -d selenium-hub"
    
    log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Selenium Hub..."
    sleep 30
    
    # –ó–∞–ø—É—Å–∫ Chrome Node
    run_command "docker-compose -f $COMPOSE_FILE -p $PROJECT_NAME up -d selenium-chrome"
    
    log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Chrome Node..."
    sleep 20
    
    success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
verify_selenium_health() {
    log "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è Selenium Grid..."
    log "üîó –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è URL: $SELENIUM_HUB_URL"

    local max_attempts=15

    for attempt in $(seq 1 $max_attempts); do
        log "üîç –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        log "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
        docker ps --filter "name=selenium" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" || true

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Hub status —á–µ—Ä–µ–∑ Docker exec (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ)
        if docker exec selenium-hub curl -s -f "http://localhost:4444/wd/hub/status" >/dev/null 2>&1; then
            local status_response=$(docker exec selenium-hub curl -s "http://localhost:4444/wd/hub/status")
            local ready=$(echo "$status_response" | grep -o '"ready":[^,}]*' | cut -d':' -f2 | tr -d ' ')

            if [ "$ready" = "true" ]; then
                success "Selenium Hub –≥–æ—Ç–æ–≤!"

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤
                local nodes_count=$(echo "$status_response" | grep -o '"nodes":\[' | wc -l)
                if [ "$nodes_count" -gt 0 ]; then
                    success "Chrome Node –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Hub!"

                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Grid API
                    if docker exec selenium-hub curl -s -f "http://localhost:4444/grid/api/hub" >/dev/null 2>&1; then
                        success "Selenium Grid API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
                    else
                        warning "Grid API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ Hub –≥–æ—Ç–æ–≤"
                    fi

                    return 0
                else
                    log "‚è≥ Chrome Node –µ—â–µ –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Hub"
                fi
            else
                log "‚è≥ Hub –Ω–µ –≥–æ—Ç–æ–≤. –°—Ç–∞—Ç—É—Å: $ready"
            fi
        else
            log "‚è≥ Hub –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        fi

        sleep 10
    done

    error "Selenium Grid –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
    log "üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
    log "–õ–æ–≥–∏ Selenium Hub:"
    docker logs --tail=10 selenium-hub || true
    log "–õ–æ–≥–∏ Chrome Node:"
    docker logs --tail=10 selenium-chrome || true

    return 1
}

# –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤
show_selenium_logs() {
    log "üìã –õ–æ–≥–∏ Selenium Hub:"
    docker-compose -f $COMPOSE_FILE -p $PROJECT_NAME logs --tail=20 selenium-hub || true
    
    log "üìã –õ–æ–≥–∏ Chrome Node:"
    docker-compose -f $COMPOSE_FILE -p $PROJECT_NAME logs --tail=20 selenium-chrome || true
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º Selenium Grid"
    echo "============================================================"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if ! command -v docker >/dev/null 2>&1; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v docker-compose >/dev/null 2>&1; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v curl >/dev/null 2>&1; then
        error "curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v nc >/dev/null 2>&1; then
        warning "netcat –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ –±—É–¥–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞"
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ª–æ–≥–∏
    show_selenium_logs
    
    echo "============================================================"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    local steps=(
        "stop_selenium_services:–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
        "remove_selenium_containers:–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        "pull_selenium_images:–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤"
        "start_selenium_services:–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
        "verify_selenium_health:–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"
    )
    
    for step in "${steps[@]}"; do
        local func_name="${step%%:*}"
        local step_name="${step##*:}"
        
        log "üìã –®–∞–≥: $step_name"
        
        if $func_name; then
            success "–®–∞–≥ '$step_name' –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        else
            error "–®–∞–≥ '$step_name' –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ—É–¥–∞—á–Ω–æ"
            
            log "üîç –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
            show_selenium_logs
            
            exit 1
        fi
    done
    
    success "üéâ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã Selenium —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!"
    log "üîó Selenium Hub –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: $SELENIUM_HUB_URL"
    log "üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: make selenium-status"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
