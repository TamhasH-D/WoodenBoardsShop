#!/usr/bin/env python3
"""–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Selenium Grid."""

import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


def test_selenium_grid():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Selenium Grid –∏ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏."""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Selenium Grid...")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –æ–ø—Ü–∏–π
    chrome_options = Options()
    chrome_options.add_argument("--headless")  # –ó–∞–ø—É—Å–∫ –±–µ–∑ GUI
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--window-size=1920,1080")
    
    driver = None
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Selenium Grid
        print("üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Selenium Hub...")
        driver = webdriver.Remote(
            command_executor="http://selenium-hub:4444/wd/hub",
            options=chrome_options
        )
        
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ Selenium Grid!")
        print(f"üìã –°–µ—Å—Å–∏—è ID: {driver.session_id}")
        print(f"üåê Capabilities: {driver.capabilities['browserName']} {driver.capabilities['browserVersion']}")
        
        # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
        
        # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        driver.get("https://httpbin.org/html")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {driver.title}")
        
        # –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
        wait = WebDriverWait(driver, 10)
        h1_element = wait.until(EC.presence_of_element_located((By.TAG_NAME, "h1")))
        print(f"üìù –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç H1: {h1_element.text}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        window_size = driver.get_window_size()
        print(f"üñ•Ô∏è –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞: {window_size['width']}x{window_size['height']}")
        
        # –¢–µ—Å—Ç JavaScript
        result = driver.execute_script("return navigator.userAgent;")
        print(f"üîß User Agent: {result[:50]}...")
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Selenium: {e}")
        return False
        
    finally:
        if driver:
            print("üîö –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...")
            driver.quit()


def test_grid_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Grid —á–µ—Ä–µ–∑ API."""
    import requests

    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Selenium Grid...")

    try:
        response = requests.get("http://selenium-hub:4444/status", timeout=10)
        assert response.status_code == 200, f"Grid –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: HTTP {response.status_code}"

        data = response.json()
        print(f"‚úÖ Grid –≥–æ—Ç–æ–≤: {data['value']['ready']}")
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤: {len(data['value']['nodes'])}")

        assert data['value']['ready'] is True, "Grid –Ω–µ –≥–æ—Ç–æ–≤"
        assert len(data['value']['nodes']) > 0, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É–∑–ª–æ–≤"

        for i, node in enumerate(data['value']['nodes']):
            print(f"  üìç –£–∑–µ–ª {i+1}: {node['availability']} ({len(node['slots'])} —Å–ª–æ—Ç–æ–≤)")
            assert node['availability'] == 'UP', f"–£–∑–µ–ª {i+1} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        raise


if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Selenium Grid")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Grid
    grid_ok = test_grid_status()
    
    if grid_ok:
        # –¢–µ—Å—Ç –±—Ä–∞—É–∑–µ—Ä–∞
        selenium_ok = test_selenium_grid()
        
        if selenium_ok:
            print("\nüéâ Selenium Grid –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            exit(0)
        else:
            print("\nüí• –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º –±—Ä–∞—É–∑–µ—Ä–∞")
            exit(1)
    else:
        print("\nüí• Selenium Grid –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        exit(1)
