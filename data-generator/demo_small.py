#!/usr/bin/env python3
"""
–î–µ–º–æ-—Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å –º–∞–ª—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º
"""

import os
from generate_data import DataGenerator

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å –º–∞–ª—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞–ª—ã–π –ø—Ä–æ—Ñ–∏–ª—å
    os.environ['GENERATION_PROFILE'] = 'small'
    
    print("üß™ –î–µ–º–æ-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –º–∞–ª—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º")
    print("=" * 50)
    
    generator = DataGenerator()
    
    print(f"üìã –ü—Ä–æ—Ñ–∏–ª—å: {generator.profile}")
    print(f"üìä –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å:")
    
    total_planned = 0
    for entity, count in generator.counts.items():
        print(f"  - {entity}: {count}")
        total_planned += count
    print(f"  üìù –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total_planned}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    if not generator.check_api_health():
        print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend –∫–æ–º–∞–Ω–¥–æ–π 'make backend-up'")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    try:
        generator.run_generation()
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
