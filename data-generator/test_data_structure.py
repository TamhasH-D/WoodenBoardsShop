#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
"""

import json
from uuid import uuid4
from datetime import datetime
from data_templates import WOOD_TYPES, WOOD_PRICE_RANGES

def test_wood_type_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è WoodType"""
    wood_type = WOOD_TYPES[0]
    payload = {
        'id': str(uuid4()),
        'neme': wood_type['neme'],
        'description': wood_type['description']
    }
    print("‚úÖ WoodType payload:", json.dumps(payload, ensure_ascii=False, indent=2))

def test_wood_type_price_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è WoodTypePrice"""
    wood_type_id = str(uuid4())
    price_range = WOOD_PRICE_RANGES['–°–æ—Å–Ω–∞']
    payload = {
        'id': str(uuid4()),
        'price_per_m3': 25000.50,
        'wood_type_id': wood_type_id
    }
    print("‚úÖ WoodTypePrice payload:", json.dumps(payload, ensure_ascii=False, indent=2))

def test_buyer_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Buyer"""
    payload = {
        'id': str(uuid4()),
        'keycloak_uuid': str(uuid4()),
        'is_online': True
    }
    print("‚úÖ Buyer payload:", json.dumps(payload, ensure_ascii=False, indent=2))

def test_seller_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Seller"""
    payload = {
        'id': str(uuid4()),
        'keycloak_uuid': str(uuid4()),
        'is_online': False
    }
    print("‚úÖ Seller payload:", json.dumps(payload, ensure_ascii=False, indent=2))

def test_product_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Product"""
    payload = {
        'id': str(uuid4()),
        'volume': 0.025,
        'price': 1250.75,
        'title': '–î–æ—Å–∫–∞ –°–æ—Å–Ω–∞ 100x25x2000–º–º',
        'descrioption': '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –¥—Ä–µ–≤–µ—Å–∏–Ω–∞ –°–æ—Å–Ω–∞. –ú–∞—Ç–µ—Ä–∏–∞–ª –ø—Ä–æ—à–µ–ª –∫–∞–º–µ—Ä–Ω—É—é —Å—É—à–∫—É.',
        'delivery_possible': True,
        'pickup_location': '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 15',
        'seller_id': str(uuid4()),
        'wood_type_id': str(uuid4())
    }
    print("‚úÖ Product payload:", json.dumps(payload, ensure_ascii=False, indent=2))

def test_image_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Image"""
    payload = {
        'id': str(uuid4()),
        'filename': 'test_image.jpg',
        'product_id': str(uuid4())
    }
    print("‚úÖ Image payload:", json.dumps(payload, ensure_ascii=False, indent=2))

def test_wooden_board_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è WoodenBoard"""
    payload = {
        'id': str(uuid4()),
        'height': 25.0,
        'width': 100.0,
        'lenght': 2000.0,
        'image_id': str(uuid4())
    }
    print("‚úÖ WoodenBoard payload:", json.dumps(payload, ensure_ascii=False, indent=2))

def test_chat_thread_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ChatThread"""
    payload = {
        'id': str(uuid4()),
        'buyer_id': str(uuid4()),
        'seller_id': str(uuid4())
    }
    print("‚úÖ ChatThread payload:", json.dumps(payload, ensure_ascii=False, indent=2))

def test_chat_message_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ChatMessage"""
    payload = {
        'id': str(uuid4()),
        'message': '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤–∞—à —Ç–æ–≤–∞—Ä.',
        'is_read_by_buyer': True,
        'is_read_by_seller': False,
        'thread_id': str(uuid4()),
        'buyer_id': str(uuid4()),
        'seller_id': str(uuid4())
    }
    print("‚úÖ ChatMessage payload:", json.dumps(payload, ensure_ascii=False, indent=2))

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è API...")
    print()
    
    test_wood_type_structure()
    print()
    test_wood_type_price_structure()
    print()
    test_buyer_structure()
    print()
    test_seller_structure()
    print()
    test_product_structure()
    print()
    test_image_structure()
    print()
    test_wooden_board_structure()
    print()
    test_chat_thread_structure()
    print()
    test_chat_message_structure()
    print()
    
    print("üéâ –í—Å–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!")

if __name__ == "__main__":
    main()
