name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create .env file
      run: |
        cp .env .env.backup
        # Update API URLs for container networking
        sed -i 's|FRONTEND_ADMIN_API_URL=.*|FRONTEND_ADMIN_API_URL=http://backend-api:8000/|' .env
        sed -i 's|FRONTEND_SELLER_API_URL=.*|FRONTEND_SELLER_API_URL=http://backend-api:8000/|' .env
        sed -i 's|FRONTEND_BUYER_API_URL=.*|FRONTEND_BUYER_API_URL=http://backend-api:8000/|' .env

    - name: Build all services
      run: |
        echo "Building all services..."
        make build-prod

    - name: Start all services
      run: |
        echo "Starting all services..."
        make up-prod

    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to start..."
        sleep 60
        
        # Check if containers are running
        docker compose ps
        
        # Check backend health
        timeout 300 bash -c 'until curl -f http://localhost:8000/docs; do sleep 5; done' || {
          echo "Backend failed to start"
          docker compose logs backend-api
          exit 1
        }
        
        # Check frontend services
        timeout 300 bash -c 'until curl -f http://localhost:8080; do sleep 5; done' || {
          echo "Admin frontend failed to start"
          docker compose logs admin-frontend
          exit 1
        }
        
        timeout 300 bash -c 'until curl -f http://localhost:8081; do sleep 5; done' || {
          echo "Seller frontend failed to start"
          docker compose logs seller-frontend
          exit 1
        }
        
        timeout 300 bash -c 'until curl -f http://localhost:8082; do sleep 5; done' || {
          echo "Buyer frontend failed to start"
          docker compose logs buyer-frontend
          exit 1
        }

    - name: Run basic API tests
      run: |
        echo "Running basic API tests..."
        # Test backend API endpoints
        curl -f http://localhost:8000/docs || exit 1
        curl -f http://localhost:8000/health || echo "Health endpoint not available"
        
        # Test frontend accessibility
        curl -f http://localhost:8080 || exit 1
        curl -f http://localhost:8081 || exit 1
        curl -f http://localhost:8082 || exit 1

    - name: Show service logs on failure
      if: failure()
      run: |
        echo "=== Docker Compose Status ==="
        docker compose ps
        echo "=== All Service Logs ==="
        docker compose logs --tail=100

    - name: Stop services
      if: always()
      run: |
        make down

  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deployment step - configure your production deployment here"
        echo "This could include:"
        echo "- Pushing images to registry"
        echo "- Deploying to Kubernetes"
        echo "- Updating Docker Swarm"
        echo "- SSH to production server and update"
