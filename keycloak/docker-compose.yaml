services:
  keycloak-postgres:
    image: postgres:latest
    container_name: keycloak-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak-network
    healthcheck: # Added healthcheck for postgres
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:latest # Consider versioning, e.g., quay.io/keycloak/keycloak:23.0
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=${KC_DB}
      - KC_DB_URL=${KC_DB_URL} # e.g., jdbc:postgresql://keycloak-postgres:5432/${POSTGRES_DB}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      # SMTP Variables (ensure these are in your .env file)
      - KC_SMTP_SERVER_HOST=${KC_SMTP_SERVER_HOST}
      - KC_SMTP_SERVER_PORT=${KC_SMTP_SERVER_PORT}
      - KC_SMTP_FROM=${KC_SMTP_FROM}
      - KC_SMTP_AUTH=${KC_SMTP_AUTH}
      - KC_SMTP_USER=${KC_SMTP_USER}
      - KC_SMTP_PASSWORD=${KC_SMTP_PASSWORD}
      - KC_SMTP_STARTTLS=${KC_SMTP_STARTTLS}
      - KC_SMTP_SSL=${KC_SMTP_SSL}
      # Optional: Set Keycloak log level
      # - KC_LOG_LEVEL=INFO
    ports:
      - "${KEYCLOAK_PORT}:8080"
    depends_on:
      keycloak-postgres: # Ensuring postgres is healthy before keycloak starts
        condition: service_healthy
    command:
      - start # Changed from start-dev
    volumes:
      - ./data-to-import/realms:/opt/keycloak/data/import/ # Adjusted path
    networks:
      - keycloak-network
    healthcheck: # Added healthcheck for Keycloak
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s # Give Keycloak time to start up before healthchecks begin

volumes:
  keycloak_postgres_data:

networks:
  keycloak-network:
    driver: bridge
